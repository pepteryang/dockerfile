apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd-es-v1.23
  namespace: kube-system
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    version: v1.23
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-es
        kubernetes.io/cluster-service: "true"
        version: v1.23
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      containers:
      - name: fluentd-es
        image: registry.peter.com/k8s-server/fluentd-elasticsearch:v1.23
        command:
          - '/bin/sh'
          - '-c'
          - '/usr/sbin/td-agent $FLUENTD_ARGS'
        env:
        - name: FLUENTD_AGRS
          value: -q
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      nodeSelector:
        beta.kubernetes.io/fluentd-ds-ready: "true"
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
      - name: registry.peter.com.key
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
---
apiVersion: v1
data:
  td-agent.conf: |
    {
      # This configuration file for Fluentd / td-agent is used
      <match fluent.**>
        type null
      </match>
      # Example: containers
      <source>
        type tail
        path /var/log/containers/*.log
        pos_file /var/log/es-containers.log.pos
        time_format %Y-%m-%dT%H:%M:%S.%NZ
        tag kubernetes.*
        format json
        read_from_head true
      </source>
      # Example: salt
      <source>
        type tail
        format /^(?<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\] (?<message>.*)$/
        time_format %Y-%m-%d %H:%M:%S
        path /var/log/salt/minion
        pos_file /var/log/es-salt.pos
        tag salt
      </source>
      # Example: startupscript
      <source>
        type tail
        format syslog
        path /var/log/startupscript.log
        pos_file /var/log/es-startupscript.log.pos
        tag startupscript
      </source>
      # Examples: docker
      <source>
        type tail
        format /^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
        path /var/log/docker.log
        pos_file /var/log/es-docker.log.pos
        tag docker
      </source>
      # Example: etcd
      <source>
        type tail
        format none
        path /var/log/etcd.log
        pos_file /var/log/es-etcd.log.pos
        tag etcd
      </source>
      # Example: kubelet
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kubelet.log
        pos_file /var/log/es-kubelet.log.pos
        tag kubelet
      </source>
      # Example: kube-proxy
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-proxy.log
        pos_file /var/log/es-kube-proxy.log.pos
        tag kube-proxy
      </source>
      # Example: kube-apiserver
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-apiserver.log
        pos_file /var/log/es-kube-apiserver.log.pos
        tag kube-apiserver
      </source>
      # Example: kube-controller-manager
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-controller-manager.log
        pos_file /var/log/es-kube-controller-manager.log.pos
        tag kube-controller-manager
      </source>
      # Example: kube-scheduler
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/kube-scheduler.log
        pos_file /var/log/es-kube-scheduler.log.pos
        tag kube-scheduler
      </source>
      # Example: rescheduler
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/rescheduler.log
        pos_file /var/log/es-rescheduler.log.pos
        tag rescheduler
      </source>
      # Example: glbc
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/glbc.log
        pos_file /var/log/es-glbc.log.pos
        tag glbc
      </source>
      # Example: cluster-autoscaler
      <source>
        type tail
        format multiline
        multiline_flush_interval 5s
        format_firstline /^\w\d{4}/
        format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
        time_format %m%d %H:%M:%S.%N
        path /var/log/cluster-autoscaler.log
        pos_file /var/log/es-cluster-autoscaler.log.pos
        tag cluster-autoscaler
      </source>
      <filter kubernetes.**>
        type kubernetes_metadata
      </filter>
      <match **>
         type elasticsearch
         log_level info
         include_tag_key true
         host elasticsearch
         port 9200
         logstash_format true
         # Set the chunk limit the same as for fluentd-gcp.
         buffer_chunk_limit 2M
         # Cap buffer memory usage to 2MiB/chunk * 32 chunks = 64 MiB
         buffer_queue_limit 32
         flush_interval 5s
         # Never wait longer than 5 minutes between retries.
         max_retry_wait 30
         # Disable the limit on the number of retries (retry forever).
         disable_retry_limit
         # Use multiple threads for processing.
         num_threads 8
      </match>
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: fluentd-conf
  namespace: kube-system
---